grammar = { SOI ~formula ~ EOI }
formula = { conj ~ ("|" ~ conj)* }
conj = { ltlForm ~ ("&" ~ ltlForm)* }
ltlForm = { unTerm ~ (binOp ~ unTerm)? }
unTerm = { term | unOp ~ term }
binOp = { Until
	| WeakUntil
	| Release
	| Implication
	| Equivalence
	}
unOp = { Always
	| Eventually
	| "!"
	| Next
	}
term = { "(" ~ formula ~ ")"
	| ConstBool
	| func ~ (cmpOp ~ (func | ConstNum))?
	| ConstNum ~ cmpOp ~ func
	}
cmpOp = { "=="
	| "!="
	| ">="
	| ">"
	| "<="
	| "<"
	}
func = { Name ~ "(" ~ (Name ~ ("," ~ Name)*)? ~ ")" }

WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT    = _{ "#" ~ (!NEWLINE ~ ANY)* }

Always		 = _{ "[]" }
Eventually	 = _{ "<>" }
Until		 = _{ "U" }
WeakUntil	 = _{ "W" }
Release		 = _{ "R" }
Next		 = _{ "X" }
Implication	 = _{ "->" }
Equivalence  = _{ "<->" }

ConstBool = @{ "true" | "false" }
Name = @{ (ASCII_ALPHA_LOWER | "_") ~ (ASCII_ALPHA | ASCII_DIGIT | "_")* }
ConstNum = @{ ("-")? ~ (ASCII_DIGIT)+ }