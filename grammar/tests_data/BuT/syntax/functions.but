type u8  = [ 8  : bit ];
type u16 = [ 16 : bit ];

#[visibility(false), external(false)]
fn seen() {
}

#[unused]
fn unused(input: u8) -> u8 {
    return 0 as u8;
}

#[unused]
fn condition(input: u8) -> u8 {
    assert(input != 0);
    if true {
        input += 45;
        return 9 + input[5];
    }
    return 0 as u8;
}

#[unused]
fn with_formula(input1: u8, input2: bit) -> u16 {
    formula "LTL" {
    }
    formula {
        None(true)
        None(false)
        Always(input1)
    }
    return (input1 + input2) as u16;
}

#[unused, external(true)]
fn external_fun(input: u8) -> u16;

