#[display("Транспортер №1")]
model Transport1 {
    state Wait {
        ref Stop: !oo | oe | !to;
        ref Stay: k1 | k2;
        ref Run : !k1 & k3 & k4 & !k2;
        enter -> bk = false;
    }
    state Run {
        ref Stop: !oo | oe | !to;
        ref Wait: k1 | k2 | !k4;
        ref Run: bt;
        enter -> bk = true;
    }
    state Stay {
        ref Stop: !oo | oe | !to;
        ref Wait: !k1 & !k2;
        enter -> bk = false;
    }
    state Stop {
        ref Wait: oo & to & !oe;
        ref Exit: !oo;
        enter -> debug("Аварийная остановка");
        enter -> {
            bk = false;
            er = true;
        }
    }
    start -> Stop;
    /** Если паллета есть в 2 зоне и нет погрузчика в загрузочной зоне - готов */
    enter -> {
        if k2 && !k1 {
            cl = true;
        } else {
            cl = false;
        }
    }

    port k2: bool = 0x01; /* Датчик наличия паллеты в зоне 2 */
    port k3: bool = 0x02; /* Датчик наличия паллеты в зоне 1 */
    port k4: bool = 0x03; /* Датчик наличия паллеты на транспортере */
    port k1: bool = 0x04; /* Датчик наличия погрузчика в зоне выдачи */
    port bt: bool = 0x06; /* Транспортер работает, энкодер. true - работает, false - остановлен */
    port bk: bool = 0x10; /* Управление траспортером. true - включение, false - отключение */

    port to: bool = 0x23; /* Локальный, включение. true - включен, false - выключен */

    port er: bool = 0x30; /* Ошибка, аварийный */
    port cl: bool = 0x31; /* Транспортер готов к выдаче */
}

#[display("Транспортер №2")]
model Transport2 {
    state Wait {
        ref Stop: !oo | oe | !to;
        ref Stay: k1 | k3;
        ref Run : !k1 & !k3 & k4;
        enter -> bk = false;
    }
    state Run {
        ref Stop: !oo | oe | !to;
        ref Wait: k1 | k3 | !k4;
        ref Run: bt;
        enter -> bk = true;
    }
    state Stay {
        ref Stop: !oo | oe | !to;
        ref Wait: !k1 & !k3;
        enter -> bk = false;
    }
    state Stop {
        ref Wait: oo & to & !oe;
        ref Exit: !oo;
        enter -> debug("Аварийная остановка");
        enter -> {
            bk = false;
            er = true;
        }
    }
    start -> Stop;
    /** Если паллеты нет в 3 зоне и нет погрузчика в загрузочной зоне - свободен для загрузки */
    enter -> {
        if !k2 && !k1 {
            cl = true;
        } else {
            cl = false;
        }
    }

    port k2: bool = 0x01; /* Датчик наличия паллеты в зоне 3 */
    port k3: bool = 0x02; /* Датчик наличия паллеты в зоне 4 */
    port k4: bool = 0x03; /* Датчик наличия паллеты на транспортере */
    port k1: bool = 0x04; /* Датчик наличия погрузчика в зоне выдачи */
    port bt: bool = 0x06; /* Транспортер работает, энкодер. true - работает, false - остановлен */
    port bk: bool = 0x10; /* Управление траспортером. true - включение, false - отключение */

    port to: bool = 0x23; /* Локальный, включение. true - включен, false - выключен */

    port er: bool = 0x30; /* Ошибка, аварийный */
    port cl: bool = 0x31; /* Транспортер свободен */
}

port oe: bool = 0x21; /* Общий, аварийный. true - авария, false - нормальная работа */
port oo: bool = 0x22; /* Общий, включение. true - включен, false - выключен */